version: '3.8'
services:
  calculator:
    container_name: calculator
    build:
      context: ./calculator
    networks:
      - backend-net
  deal:
    container_name: deal
    env_file:
      - .env
    build:
      context: ./deal
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres/hackathon-template"
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CALCULATOR_SERVICE_HOST: calculator:8080
      APP_SECURITY_AUTH_TOKEN: ${APP_SECURITY_AUTH_TOKEN}
    depends_on:
      - calculator
      - kafka
      - postgres
    networks:
      - backend-net
      - kafka-net
      - postgres-net
  statement:
    container_name: statement
    env_file:
      - .env
    build:
      context: ./statement
    environment:
      DEAL_SERVICE_HOST: deal:8080
    depends_on:
      - deal
    networks:
      - backend-net
  dossier:
    container_name: dossier
    build:
      context: ./dossier
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      DEAL_SERVICE_HOST: deal:8080
      APP_SECURITY_AUTH_TOKEN: ${APP_SECURITY_AUTH_TOKEN}
    depends_on:
      - deal
      - kafka
    networks:
      - backend-net
      - kafka-net
  gateway:
    container_name: gateway
    build:
      context: ./gateway
    environment:
      DEAL_SERVICE_HOST: http://deal:8080
      STATEMENT_SERVICE_HOST: http://statement:8080
    ports:
      - "8080:8080"
    networks:
      - backend-net
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - kafka-net
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-net
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: hackathon-template
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    networks:
      - postgres-net
    volumes:
      - postgres_data:/var/lib/postgresql/data
networks:
  postgres-net:
    driver: bridge
  kafka-net:
    driver: bridge
  backend-net:
volumes:
  postgres_data: